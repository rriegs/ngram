#!/usr/bin/perl

use XML::LibXML::Reader;
use XML::LibXML::XPathContext;

# Wiktionary contains many UTF-8 characters; output them correctly.
binmode(STDOUT, ':utf8');

my $comment = qr/<!--.*?-->/s;
my $literal = qr/("[^"]*"|'[^']*')/s;
my $attribs = qr{(\s[^</>"']*($literal[^</>"']*)*)?}s;

sub element {
    my $name = shift;
    return qr{<\s*$name$attribs(/\s*>|>.*?<\s*/\s*$name\s*>)}s;
}

# This will be used to find relevant components of <page> nodes.
my $xpc = XML::LibXML::XPathContext->new;
$xpc->registerNs('k', 'http://www.mediawiki.org/xml/export-0.10/');

# Stream Wiktionary content rather than loading it all at once.
my $reader = XML::LibXML::Reader->new(IO => *STDIN);
while ($reader->nextElement('page')) {
    my $pageNode = $reader->copyCurrentNode(1);

    my $nsNode = $xpc->findnodes('k:ns', $pageNode)->shift;
    my $titleNode = $xpc->findnodes('k:title', $pageNode)->shift;
    my $redirectNode = $xpc->findnodes('k:redirect', $pageNode)->shift;
    my $textNode = $xpc->findnodes('k:revision/k:text', $pageNode)->shift;

    # Ignore non-definitions (ns != 0), redirects, and invalid pages.
    next if (!$nsNode || $nsNode->textContent ne '0' ||
             $redirectNode || !$titleNode || !$textNode);

    # Strip XML comments and ref elements.
    my $pageText = $textNode->textContent;
    $pageText =~ s/$comment|${element('ref')}//gs;

    # Wiktionary markup largely results in content items occuring on
    # separate lines; accordingly, process pages line at a time.
    my @lines = split(/\n/, $pageText);
    while (@lines) {

        # Skip lines until the next headword macro, which always
        # precedes an ordered list of definitions.
        next if (shift(@lines) !~ /^\{\{(en-|head\|en\|)(.*?)(\||\}\})/);
        my $partOfSpeech = $2;

        # The list ends at the beginning of the next section (/^=/).
        while (@lines && $lines[0] !~ /^=/) {

            # Ordered entries represent definitions; ignore others.
            next if (shift(@lines) !~ /^#+(?![#*:])\s*(.*)/);
            my $sense = $1;

            print $titleNode->textContent, " : $partOfSpeech : $sense\n";
        }
    }
}
